ПРОВЕРКА НА ДУРАКА выполняется следующим образом:
1) Просим ввести количество функций, предполагая, что юзер умный.
2) Если предположение подтверждается, то все нормально.
3) Если не подтверждается, то проверяется, ввёл ли пользователь отрицательное число, 0 или просто ничего не ввёл


Т0():
1) Проверям, что самой первый элемент вектора значений функции равен 0.


Т1():
1) Проверям, что самой последний элемент вектора значений функции равен 1.

Samod():
1) Проверям, что функция на противоположных друг другу наборах значений аргументов принимает противоположные значения.
2) Чтобы это сделать, сначала сравниваем первое и последнее значение функции, потом второе и предпоследнее и т.д.


Monot():
1) Проверяем, что функция не убывает по каждому аргументу.
2) Для этого сравниваем значение по одному набору значений переменных и по следующему за ним.
3) При этом делаем шаг 2, т.к. мы не можем сказать, какой вектор больше для двух, следующих через 1, векторов, например, 001 и 010 


Line():
1) Строим полином Жегалкина, по методу Паскаля.    https://en.wikipedia.org/wiki/Zhegalkin_polynomial#The_Pascal_method
3) j используем для навигации по блокам.
4) k определяет шаг по строке.
5) z используем для выбора элементов для ксора.
6) Конечный вектор передаётся в другой цикл.
7) Если значение элемента вектора равно нулю, переходим к другому элементу.
8) Каждому i в бинарном виде соответствует набор значений аргументов.
9) Суммируем все элементы из вектора.
10) Если сумма больше единицы, т.е есть какой-то вектор, более одной переменной со значением 1, то это значит, что присутствует конъюнкция.


ВЫВОД:
1) Выводим табличку, отражающую принадлежность функций к классам Поста.
2) Если хотя бы одна функция на всех 5 методах получила единицу, то набор не полный.